using System.IO;
string? navigationResponse;
string itemTitle;
string userConfirmation;
string itemDescription;
string itemEnd;
DateTime itemStart = new DateTime();
List<Tuple<string, string, string, string>> allItems = new List<Tuple<string, string, string, string>>();
List<Tuple<string, string, string, string>> toDoItems = new List<Tuple<string, string, string, string>>();
List<Tuple<string, string, string, string>> completedItems = new List<Tuple<string, string, string, string>>();

string[] allItemsLines = File.ReadAllLines("./AllItems.csv");
string[] completedItemLines = File.ReadAllLines("./CompletedItems.csv");
string[] toDoItemsLines = File.ReadAllLines("./ToDoItems.csv");

foreach (string line in allItemsLines)
{
    string[] info = line.Split(',');
    allItems.Add(Tuple.Create(info[0], info[1], info[2], info[3]));
}

foreach (string line in toDoItemsLines)
{
    string[] info = line.Split(',');
    toDoItems.Add(Tuple.Create(info[0], info[1], info[2], info[3]));
}

foreach (string line in completedItemLines)
{
    string[] info = line.Split(',');
    completedItems.Add(Tuple.Create(info[0], info[1], info[2], info[3]));
}

ToDoList();

void ToDoList()
{
    Console.ForegroundColor = ConsoleColor.White;
    Console.Clear();
    Console.WriteLine("To-Do List");
    Console.WriteLine("1) View All Items");
    Console.WriteLine("2) View To-Do Items");
    Console.WriteLine("3) View Completed Items");
    Console.WriteLine("4) Add new item to list");
    Console.ForegroundColor = ConsoleColor.Blue;
    Console.WriteLine("Please respond by typing '1' or '2'");
    navigationResponse = Console.ReadLine();
    Console.ResetColor();

    if (navigationResponse == "1")
    {
        Console.Clear();
        ViewAllItemsList();
    }

    else if (navigationResponse == "2")
    {
        Console.Clear();
        ViewToDoItemsList();
    }

    else if (navigationResponse == "3")
    {
        Console.Clear();
        ViewCompletedItemsList();
    }

    else if (navigationResponse == "4")
    {
        Console.Clear();
        AddNewItem();
    }

    else
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine("Invalid Response.");
        Console.ResetColor();
        Thread.Sleep(1000);
        ToDoList();
    }
}

void AddNewItem()
{
    Console.ForegroundColor = ConsoleColor.Blue;
    Console.WriteLine("Please enter title of to-do item");
    Console.ResetColor();
    itemTitle = Console.ReadLine();
    ConfirmTitle();
    Console.ForegroundColor = ConsoleColor.Blue;
    Console.WriteLine($"Please enter a description for {itemTitle}");
    Console.ResetColor();
    itemDescription = Console.ReadLine();
    ConfirmDescription();
    itemStart = DateTime.Now;
    itemEnd = "N/A";
    allItems.Add(Tuple.Create(itemTitle, itemDescription, Convert.ToString(itemStart), itemEnd));
    toDoItems.Add(Tuple.Create(itemTitle, itemDescription, Convert.ToString(itemStart), itemEnd));
    File.AppendAllText("AllItems.csv", $"{allItems[allItems.Count - 1]}\n");
    File.AppendAllText("ToDoItems.csv", $"{toDoItems[toDoItems.Count - 1]}\n");
    Console.ForegroundColor = ConsoleColor.Green;
    ToDoList();
}

void ConfirmTitle()
{
    Console.Write("Is ");
    Console.ForegroundColor = ConsoleColor.Blue;
    Console.Write(itemTitle);
    Console.ResetColor();
    Console.WriteLine(" the correct title? 'Y' or 'N'");
    userConfirmation = Console.ReadLine();
    if (userConfirmation == "Y" || userConfirmation == "y")
    {
        Console.ForegroundColor = ConsoleColor.Green;
        Console.WriteLine($"Title confirmed: {itemTitle}");
        Console.ResetColor();
        Thread.Sleep(1000);
        Console.Clear();
    }

    if (userConfirmation == "N" || userConfirmation == "n")
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine($"{itemTitle} has been deleted");
        Console.ResetColor();
        Thread.Sleep(1000);
        Console.Clear();
        Console.WriteLine("Would you like to...");
        Console.ForegroundColor = ConsoleColor.Blue;
        Console.WriteLine("1) Add a new item to list? or");
        Console.WriteLine("2) Return to main menu?");
        Console.ResetColor();
        Console.WriteLine("Please respond by typing '1' or '2'");
        navigationResponse = Console.ReadLine();
        if (navigationResponse == "1")
        {
            AddNewItem();
        }

        else if (navigationResponse == "2")
        {
            ToDoList();
        }

        else
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write("We weren't sure what you wanted. Here's the main menu...");
            Console.ResetColor();
            Thread.Sleep(1000);
            ToDoList();
        }
    }
}

void ConfirmDescription()
{
    Console.Write("Is ");
    Console.ForegroundColor = ConsoleColor.Blue;
    Console.Write(itemDescription);
    Console.ResetColor();
    Console.WriteLine(" the correct description? 'Y' or 'N'");
    userConfirmation = Console.ReadLine();
    if (userConfirmation == "Y" || userConfirmation == "y")
    {
        Console.ForegroundColor = ConsoleColor.Green;
        Console.WriteLine($"Description confirmed.");
        Console.ResetColor();
        Thread.Sleep(1000);
    }

    if (userConfirmation == "N" || userConfirmation == "n")
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine($"Description deleted.");
        Console.ResetColor();
        Console.ForegroundColor = ConsoleColor.Blue;
        Console.WriteLine($"Please enter a description for {itemTitle}");
        Console.ResetColor();
        itemDescription = Console.ReadLine();
        ConfirmDescription();
    }
}

void ViewAllItemsList()
{
    for (int y = 0; y < allItems.Count; y++)
    {
        Console.WriteLine($"{y}. {allItems[y]}");
    }
    Console.WriteLine("Press any key to return to main menu.");
    Console.ReadKey();
    ToDoList();
}

void ViewToDoItemsList()
{
    if (toDoItems.Count > 0)
    {
        for (int y = 0; y < allItems.Count; y++)
        {
            Console.WriteLine($"{y}. {toDoItems[y]}");
        }
        Console.WriteLine("To mark an item as complete, type the number associated with it.");
        Console.WriteLine("Or press any other key to return to main menu.");
        navigationResponse = Console.ReadLine();
        if (navigationResponse == "0")
        {
            MarkItemComplete(0);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "1")
        {
            MarkItemComplete(1);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "2")
        {
            MarkItemComplete(2);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "3")
        {
            MarkItemComplete(3);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "4")
        {
            MarkItemComplete(4);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "5")
        {
            MarkItemComplete(5);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "6")
        {
            MarkItemComplete(6);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "7")
        {
            MarkItemComplete(7);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "8")
        {
            MarkItemComplete(8);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "9")
        {
            MarkItemComplete(9);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else if (navigationResponse == "10")
        {
            MarkItemComplete(10);
            Console.WriteLine("Item marked as complete.");
            Thread.Sleep(1000);
            ToDoList();
        }
        else
        {
            ToDoList();
        }
    }
    else
    {
        Console.WriteLine("Press any key to return to main menu.");
        Console.ReadKey();
        ToDoList();
    }

}

void ViewCompletedItemsList()
{
    for (int y = 0; y < allItems.Count; y++)
    {
        Console.WriteLine($"{y}. {allItems[y]}");
    }
    Console.WriteLine("Press any key to return to main menu.");
    Console.ReadKey();
    ToDoList();
}

void MarkItemComplete(int z)
{
    itemEnd = Convert.ToString(DateTime.Now);
    completedItems.Add(toDoItems[z]);
    toDoItems.Remove(toDoItems[z]);
    File.WriteAllText("ToDoItems.csv", "");
    for (int x = 0; x < toDoItems.Count; x++)
    {
        File.AppendAllText("ToDoItems.csv", $"{Convert.ToString(toDoItems[x])}\n");
    }
    File.AppendAllText("CompletedItems.csv", $"{Convert.ToString(completedItems[completedItems.Count - 1])}\n");
}